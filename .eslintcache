[{"C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\index.js":"1","C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\component\\FTable.js":"2","C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\component\\Form.js":"3","C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\Appp.js":"4"},{"size":486,"mtime":1606323373031,"results":"5","hashOfConfig":"6"},{"size":1320,"mtime":1606408352649,"results":"7","hashOfConfig":"6"},{"size":6806,"mtime":1606407819979,"results":"8","hashOfConfig":"6"},{"size":313,"mtime":1606405396959,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ona25",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\index.js",[],["20","21"],"C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\component\\FTable.js",[],"C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\component\\Form.js",["22"],"import React, {useEffect, useState} from 'react'\r\nimport FTable from './FTable';\r\n\r\nconst Form = () => {\r\n\r\n    const [data, setData] = useState({\r\n        id: null,\r\n        fname: '',\r\n        lname: '',\r\n        email: '',\r\n        schname: '',\r\n        erno: '',\r\n        address: '',\r\n        mobino: ''\r\n    })\r\n    const [expand, setExpand] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    useEffect(() => {\r\n        setItems(items)\r\n        // console.log('items', items)\r\n    }, [items]);\r\n\r\n    const addEvent = () => {\r\n        setExpand(true)\r\n    }\r\n\r\n    const btn = () => {\r\n        setExpand(false);\r\n    }\r\n\r\n    const inputEvent = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        setData((oldData) => {\r\n            return {\r\n                ...oldData,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const inputSubmit = () => {\r\n        if (data.id === null) {\r\n            const stuid = (items.length + 1);\r\n            const newdata = Object.assign(data, {id: stuid})\r\n            setItems((newdata) => {\r\n                return [...newdata, data]\r\n            })\r\n        } else {\r\n            pushToArray(items, data)\r\n\r\n            function pushToArray(arr, obj) {\r\n                const index = arr.findIndex((e) => e.id === obj.id);\r\n                arr[index] = obj;\r\n            }\r\n        }\r\n        setData({\r\n            id: null,\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            schname: '',\r\n            erno: '',\r\n            address: '',\r\n            mobino: ''\r\n        })\r\n    }\r\n\r\n    const onDelete = (data) => {\r\n        if (data) {\r\n            pushToArray(items, data)\r\n\r\n            function pushToArray(arr, obj) {\r\n                const index = arr.findIndex((e) => e.id === obj.id)\r\n                arr.splice(index, 1)\r\n                setItems((items) => {\r\n                    return [...items]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const onUpdate = (data) => {\r\n        setData(data);\r\n    }\r\n    return (\r\n       <>\r\n           <div>\r\n               <button type=\"button\" className=\"btn btn-primary add-button\" onClick={addEvent}\r\n                       onDoubleClick={btn}>Add\r\n               </button>\r\n               <div>\r\n                   <h1 className='d-flex justify-content-center'>\r\n                       Student Form\r\n                   </h1>\r\n                   <hr/>\r\n\r\n               </div>\r\n               <div className=\"container-fluid nav_bg\">\r\n                   <div className='row'>\r\n                       <div className='col-10 mx-auto'>\r\n\r\n                           {expand ? <form>\r\n                               <div>\r\n                                   <input type=\"text\" className=\"form-control mt-3\" placeholder=\"First name\"\r\n                                          value={data.fname} name={\"fname\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div>\r\n                                   <input type=\"text\" className=\"form-control mt-3\" placeholder=\"Last name\"\r\n                                          value={data.lname} name={\"lname\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div>\r\n                                   <input type=\"email\" className=\"form-control mt-3\" placeholder=\"Email\"\r\n                                          value={data.email} name={\"email\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div>\r\n                                   <input type=\"text\" className=\"form-control mt-3\" placeholder=\"School Name\"\r\n                                          value={data.schname} name={\"schname\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div>\r\n                                   <input type=\"number\" className=\"form-control mt-3\" placeholder=\"Enrollment No\"\r\n                                          value={data.erno} name={\"erno\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div className=\"form-group mt-3\">\r\n                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                                          placeholder=\"Address\"\r\n                                          value={data.address} name={\"address\"} onChange={inputEvent} required/>\r\n                               </div>\r\n                               <div>\r\n                                   <input type=\"number\" className=\"form-control mt-3\" placeholder=\"Mobile No\"\r\n                                          value={data.mobino} name={\"mobino\"} onChange={inputEvent} required/></div>\r\n                               <button type=\"button\" className=\"btn btn-primary mt-3\" onClick={inputSubmit}>\r\n                                   Submit\r\n                               </button>\r\n                           </form> : null}\r\n                       </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n\r\n           <div className=\"container-fluid nav_bg\">\r\n               <div className='row'>\r\n                   <div className='col-10 mx-auto'>\r\n                           <table className=\"table mt-5\">\r\n                               <thead>\r\n                               <tr>\r\n                                   <th scope=\"col\">Id</th>\r\n                                   <th scope=\"col\">FirstName</th>\r\n                                   <th scope=\"col\">LastName</th>\r\n                                   <th scope=\"col\">Email</th>\r\n                                   <th scope=\"col\">SchoolName</th>\r\n                                   <th scope=\"col\">EnrollmentNo</th>\r\n                                   <th scope=\"col\">Address</th>\r\n                                   <th scope=\"col\">MobileNo</th>\r\n                                   <th scope=\"col\">action</th>\r\n                               </tr>\r\n                               </thead>\r\n                               <tbody>\r\n                               {items.map((val, index) => {\r\n                                   return <FTable\r\n                                      key={index}\r\n                                      data={val}\r\n                                      deleteItem={onDelete}\r\n                                      updateItem={onUpdate}\r\n                                   />\r\n                               })}\r\n                               </tbody>\r\n                           </table>\r\n                       </div>\r\n               </div>\r\n           </div>\r\n\r\n       </>\r\n    )\r\n};\r\n\r\nexport default Form;","C:\\Users\\JAY\\Documents\\GitHub\\redux\\src\\Appp.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":45,"column":19,"nodeType":"29","messageId":"30","endLine":45,"endColumn":26},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'newdata' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]